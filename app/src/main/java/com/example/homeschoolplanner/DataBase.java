package com.example.homeschoolplanner;

import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.annotation.NonNull;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.annotations.NotNull;

import java.io.Serializable;

public class DataBase implements Serializable {
    static public final String TAG = "DataBase";
    private static FirebaseAuth mAuth;

    //THIRD
    public static User retrieveUserData(String user_name, String password ) {
        //I give you a username and password

        //You get all the data associated with the account needed to create a full instance of user.

        //You give me a User object
        return new User();
    }

    //YEAH NAW
    public static String createHousehold() {
        //Skip for now.
        Log.d(TAG, "Send Household data to Server.");

        //Return the household id
        return "";
    }

    //FIRST
    public static String createParent() {

        Log.d(TAG, "Sent new parent data to Server.");

        return "";
    }

    //SECOND
    public static boolean createChild() {
        Log.d(TAG, "Sent new child data to Server.");
        //I give you all the data needed to create a new child on the database

        //You create a new child account on the database

        //You give me the user_id generated by the server
        return false;
    }

    public static boolean createAssignment() {
        Log.d(TAG, "Sent new assignment data to Server.");
        return false;
    }

    public static String parentGetAllAssignments() {
        Log.d(TAG, "Requesting assignment data for all children.");
        return "";
    }

    public static String kidGetHomeworkList() {
        Log.d(TAG, "Requesting homework list for child.");
        return "";
    }

    public static boolean kidCompleteAssignment() {
        Log.d(TAG, "Mark assignment complete.");
        return false;
    }

    public static boolean parentConfirmAssignmentComplete() {
        Log.d(TAG, "Confirm assignment complete.");
        return false;
    }

    //YEAH NAW
    public static boolean addClassToHouseHold() {
        //skip for now
        Log.d(TAG, "Sending class data to Server.");
        return false;
    }


}
